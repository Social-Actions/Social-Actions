'''
Accumulate features for users in the timeline
(by addumulate I mean get mean and standard deviation user's features)

usage: python accumul_feat.py <sorted_features>

features are generated by features.py
features must be sorted. This can be done with unix sort program
sort -k2n,2 -k3n,3 -k1n,1 <message_features> > <sorted_message_features>

'''

import sys


""" Calculate mean and standard deviation of data x[]:
	mean = {\sum_i x_i \over n}
	std = sqrt(\sum_i (x_i - mean)^2 \over n-1)
"""
def meanstdv(x):
	from math import sqrt
	n, mean, std = len(x), 0, 0
	for a in x:
		mean = mean + a
	mean = mean / float(n)
	if n == 1:
		return mean, 0
	for a in x:
		std = std + (a - mean)**2
	std = sqrt(std / float(n-1))
	return mean, std
	
	
def main(argv):
    filename = argv[0]
    current = ''
    for line in open(filename):
        columns = line.split(' ')
        if not columns[0] == current:
            if current:
                print current,
                for ii in range(2,len(columns)):
                    if str(ii) not in argv[1:]: continue
                    mean, std = meanstdv(stats[ii])
                    print mean, std,
                print
            stats = []
            for ii in range(len(columns)): stats.append([])
        for ii in range(2,len(columns)):
            stats[ii].append(float(columns[ii]))
        current = columns[0]

if __name__ == '__main__':
    main(sys.argv[1:])
